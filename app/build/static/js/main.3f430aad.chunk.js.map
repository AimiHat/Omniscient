{"version":3,"sources":["components/TitleBar.js","components/Bank.js","components/Summary.js","components/DailyView.js","components/TransactionsList.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","fabButton","position","zIndex","top","margin","TitleBar","accounts","plaidHandler","classes","AppBar","Toolbar","Typography","variant","Fab","onClick","open","color","aria-label","className","Bank","name","balance","image_url","Card","CardActionArea","CardContent","align","component","bank_grid","marginTop","marginBottom","Summary","React","useState","balances","setBalances","useEffect","length","window","fetch","method","headers","body","JSON","stringify","access_token","then","r","json","response","filter","acc","type","map","official_name","current","Grid","container","direction","justify","spacing","alignItems","key","item","xs","Alert","severity","AlertTitle","sumByDate","list","Map","forEach","date","collection","get","set","amount","addMissingDays","data","firstDay","Date","x","lastDay","nDays","Math","round","dates","newData","i","day","addDays","toISOString","slice","ind","indexOf","push","y","prototype","days","this","valueOf","setDate","getDate","MyResponsiveBar","chartData","Box","height","width","id","colors","enableArea","pointSize","enableCrosshair","bottom","left","right","enableGridX","enableGridY","xScale","format","precision","yScale","min","max","stacked","reverse","xFormat","axisBottom","tickValues","tickRotation","legend","legendOffset","legendPosition","pointBorderWidth","useMesh","enableSlices","axisLeft","orient","tickSize","tickPadding","DailyView","props","state","Array","from","transactions","console","log","PureComponent","TransactionsList","page","setPage","rowsPerPage","setRowsPerPage","emptyRows","TableContainer","Paper","Table","size","TableHead","TableRow","TableCell","TableBody","row","store","scope","category","style","colSpan","TableFooter","TablePagination","rowsPerPageOptions","label","value","count","onChangePage","event","newPage","onChangeRowsPerPage","parseInt","target","root","display","flexDirection","justifyContent","App","storedAccounts","localStorage","getItem","parse","setItem","setAccounts","setTransactions","t","plaidLinkHandler","Plaid","create","clientName","countryCodes","env","product","accountSubtypes","depository","language","onSuccess","public_token","metadata","plaid_items","item_id","Data","Fragment","Container","maxWidth","Button","startIcon","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f430aad.chunk.js","sourcesContent":["import React from 'react'\nimport {IconButton, AppBar, Toolbar, Typography, Button} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\n\nconst useStyles = makeStyles((theme) => ({\n  fabButton: {\n    position: 'relative',\n    zIndex: 1,\n    top: 30,\n    margin: '0 auto'\n  }\n}));\n\nfunction TitleBar({accounts, plaidHandler}) {\n  const classes = useStyles();\n  return (<AppBar position=\"static\">\n    <Toolbar>\n      <Typography variant=\"h5\">\n        Welcome to Omniscient\n      </Typography>\n      {\n        <Fab onClick={() => {\n              plaidHandler.open();\n            }} variant=\"extended\" color=\"secondary\" aria-label=\"add\" className={classes.fabButton}>\n            <AddIcon/>\n            Add Bank\n          </Fab>\n      }\n    </Toolbar>\n  </AppBar>)\n}\n\nexport default TitleBar;\n","import React from 'react'\nimport {Card, CardMedia, CardContent, CardActionArea, Typography} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Alert, AlertTitle} from '@material-ui/lab';\n\nfunction Bank({name, balance, image_url}) {\n  return (<Card>\n    <CardActionArea>\n      <CardContent>\n        <Typography align=\"center\" variant=\"body2\" component=\"h3\">\n          {name}\n        </Typography>\n\t\t\t\t<Typography align=\"center\" color=\"secondary\" variant=\"h6\" component=\"h2\">\n          ${balance}\n        </Typography>\n      </CardContent>\n    </CardActionArea>\n  </Card>)\n}\n\nexport default Bank;\n","import React from 'react'\nimport {Typography, Grid} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Alert, AlertTitle} from '@material-ui/lab';\nimport Bank from './Bank';\nimport config from '../config';\n\nconst useStyles = makeStyles((theme) => ({\n  bank_grid: {\n    marginTop: \"30px\",\n    marginBottom: \"30px\"\n  }\n}))\n\nfunction Summary({accounts}) {\n  const classes = useStyles();\n  const [balances, setBalances] = React.useState(null);\n\n  React.useEffect(() => {\n    if (accounts.length === 0) {\n      return;\n    }\n    window.fetch(\"http://lvh.me:7000/accounts/balance/get\", {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json;charset=UTF-8'\n      },\n      body: JSON.stringify({access_token: accounts[0][1]})\n    }).then(r => r.json()).then(response => {\n      setBalances(response.filter(acc => acc.type === \"depository\").map(acc => {return {\n        name : acc.official_name,\n        balance: acc.balances.current,\n        image_url: \"\"\n      }}))\n    })\n  }, [accounts])\n\n  if (balances && (accounts.length > 0)) {\n    return (<Grid container\n  direction=\"row\"\n  justify=\"center\"\n\tspacing={2}\n  alignItems=\"center\" className={classes.bank_grid}>\n      {\n        balances.map((balance) => (<Grid key={balance.name} item xs={3}>\n          <Bank {...balance}/>\n        </Grid>))\n      }\n    </Grid>);\n  } else {\n    return (<Alert severity=\"info\">\n      <AlertTitle>You currently have no accounts.</AlertTitle>\n      Press the 'add' button to link your first current depository account.\n    </Alert>)\n  }\n}\n\nexport default Summary;\n","import React from 'react'\nimport {Typography, Grid, Box, Paper} from '@material-ui/core';\nimport {ResponsiveLine} from '@nivo/line'\n\nfunction sumByDate(list) {\n  const map = new Map();\n  list.forEach((item) => {\n    const key = item.date;\n    const collection = map.get(key);\n    map.set(key, item.amount + (\n      collection\n      ? collection\n      : 0));\n  });\n  return map;\n}\n\nDate.prototype.addDays = function(days) {\n  var date = new Date(this.valueOf());\n  date.setDate(date.getDate() + days);\n  return date;\n}\n\nfunction addMissingDays(data) {\n  let firstDay = new Date(data[0].x);\n  let lastDay = new Date(data[data.length - 1].x);\n  const nDays = Math.round((lastDay - firstDay) / (24 * 60 * 60 * 1000));\n  const dates = data.map(r => r.x);\n\n  let newData = [];\n\n  for (var i = 0; i < nDays; i++) {\n    let day = firstDay.addDays(i).toISOString().slice(0, 10);\n    const ind = dates.indexOf(day);\n    if (ind === -1) {\n      newData.push({x: day, y: 0});\n    } else {\n      newData.push(data[ind]);\n    }\n  }\n  return newData;\n}\n\n// make sure parent container have a defined height when using\n// responsive component, otherwise height will be 0 and\n// no chart will be rendered.\n// website examples showcase many properties,\n// you'll often use just a few of them.\nconst MyResponsiveBar = ({\n  chartData/* see data tab */\n}) => (<Box height=\"300px\" width=\"100%\">\n  <ResponsiveLine data={[{\n        id: 'Daily Spend',\n        data: addMissingDays(chartData)\n      }\n    ]} colors={['#3f51b5']} enableArea={true} pointSize={5} enableCrosshair={false} margin={{\n      bottom: 100, top: 10, left: 60, right: 5\n    }} enableGridX={false} enableGridY={false} xScale={{\n      type: 'time',\n      format: '%Y-%m-%d',\n      precision: 'day'\n    }} yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: true, reverse: false }} xFormat=\"time:%Y-%m-%d\" axisBottom={{\n      format: '%b %d',\n      tickValues: 'every 2 days',\n      tickRotation: 60,\n      legend: 'Date',\nlegendOffset: 66,\nlegendPosition: 'middle'\n    }} pointBorderWidth={1} useMesh={true} enableSlices={false} axisLeft={{\n            orient: 'left',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: '$ Daily Spend ',\n            legendOffset: -50,\n            legendPosition: 'middle'\n        }}/>\n</Box>)\n\nexport default class DailyView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: Array.from(sumByDate(props.transactions)).map(day => {\n        return ({x: day[0], y: day[1]})\n      }).reverse()\n    };\n  }\n\n  render() {\n    const {data: chartData} = this.state;\n\n    if (!chartData) {\n      return null;\n    }\n\n    console.log(chartData);\n\n    return (<MyResponsiveBar chartData={chartData}/>);\n  }\n}\n","import React from 'react'\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableFooter,\n  TablePagination,\n  TableRow,\n  TableHead,\n  IconButton,\n  Paper\n} from '@material-ui/core';\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\nimport {KeyboardArrowLeft, KeyboardArrowRight} from '@material-ui/icons';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport LastPageIcon from '@material-ui/icons/LastPage';\n\nimport PropTypes from 'prop-types';\n\nfunction TransactionsList({transactions}) {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, transactions.length - page * rowsPerPage);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (<TableContainer component={Paper}>\n    <Table aria-label=\"custom pagination table\" size=\"small\">\n      <TableHead>\n        <TableRow>\n          <TableCell>Store</TableCell>\n          <TableCell align=\"right\">Amount</TableCell>\n          <TableCell align=\"right\">Category</TableCell>\n          <TableCell align=\"right\">Date</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {\n          (\n            rowsPerPage > 0\n            ? transactions.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            : transactions).map((row) => (<TableRow key={row.store}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.store}\n              </TableCell>\n              <TableCell align=\"right\">{row.amount}</TableCell>\n              <TableCell align=\"right\">{row.category}</TableCell>\n              <TableCell align=\"right\">{row.date}</TableCell>\n            </TableRow>))\n        }\n\n        {\n          emptyRows > 0 && (<TableRow style={{\n              height: 53 * emptyRows\n            }}>\n            <TableCell colSpan={6}/>\n          </TableRow>)\n        }\n      </TableBody>\n      <TableFooter>\n        <TableRow>\n          <TablePagination rowsPerPageOptions={[\n              5,\n              10,\n              25, {\n                label: 'All',\n                value: -1\n              }\n            ]} colSpan={3} count={transactions.length} rowsPerPage={rowsPerPage} page={page} onChangePage={handleChangePage} onChangeRowsPerPage={handleChangeRowsPerPage}/>\n        </TableRow>\n      </TableFooter>\n    </Table>\n  </TableContainer>);\n}\n\nexport default TransactionsList;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Container, Typography, Button, Grid, Box} from '@material-ui/core';\nimport {Skeleton} from '@material-ui/lab'\nimport TitleBar from './components/TitleBar'\nimport Summary from './components/Summary'\nimport DailyView from './components/DailyView'\n\nimport TransactionsList from './components/TransactionsList'\nimport LockIcon from '@material-ui/icons/Lock';\nimport Fab from '@material-ui/core/Fab';\nimport {makeStyles} from '@material-ui/core/styles';\nimport config from './config';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\"\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  const getPlaidAccounts = () => {\n    const storedAccounts = window.localStorage.getItem(\"plaid_items\");\n    if (storedAccounts) {\n      return JSON.parse(storedAccounts);\n    } else {\n      window.localStorage.setItem(\"plaid_items\", JSON.stringify([]));\n      return [];\n    }\n  }\n\n  const [accounts, setAccounts] = React.useState(getPlaidAccounts);\n  const [transactions, setTransactions] = React.useState(null);\n\n  React.useEffect(()=> {\n    if (accounts.length === 0) {\n      return\n    }\n    window.fetch(\"http://lvh.me:7000/transactions\", {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json;charset=UTF-8'\n      },\n      body: JSON.stringify({access_token: accounts[0][1]})\n    }).then(r => r.json()).then(response => {\n      setTransactions(response.map(t => {return {\n        amount : t.amount,\n        store: t.name,\n        date: t.date,\n        category: t.category[1]\n      }}))\n    })\n  }, [accounts])\n\n  /*global Plaid*/\n  /*global $*/\n  var plaidLinkHandler = Plaid.create({\n    clientName: 'Omniscient',\n    countryCodes: ['US'],\n    env: 'sandbox',\n    key: '4fcccae7bfd43b8b5b607099f46e79',\n    product: [\n      'transactions', 'auth'\n    ],\n    accountSubtypes: {\n      depository: ['checking', 'savings']\n    },\n    language: 'en',\n    onSuccess: function(public_token, metadata) {\n      console.log(public_token);\n      window.fetch(\"http://lvh.me:7000/get_access_token\", {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({public_token: public_token})\n      }).then(r => r.json()).then(r => {\n        const plaid_items = JSON.parse(window.localStorage.getItem(\"plaid_items\"));\n        if (plaid_items.indexOf(public_token) === -1) {\n          plaid_items.push([r.item_id, r.access_token]);\n        }\n        window.localStorage.setItem(\"plaid_items\", JSON.stringify(plaid_items))\n        setAccounts(plaid_items);\n      })\n    }\n  });\n\n  const Data = (accounts.length > 0) && (transactions)\n    ? (() => {\n      return (<React.Fragment>\n        <DailyView transactions={transactions} />\n        <TransactionsList transactions={transactions}/>\n      </React.Fragment>)\n    })\n    : () => null;\n\n  return (<Container maxWidth=\"sm\">\n    <Button startIcon={<LockIcon />} onClick={() => {\n        window.localStorage.setItem(\"plaid_items\", JSON.stringify([]));\n        setAccounts([]);\n      }}>\n      Disconnect\n    </Button>\n    <TitleBar accounts={accounts} plaidHandler={plaidLinkHandler}/>\n    <Summary accounts={accounts}/>\n    <Data/>\n  </Container>);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}