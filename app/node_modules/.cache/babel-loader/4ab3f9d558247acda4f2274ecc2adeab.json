{"ast":null,"code":"var _jsxFileName = \"/Users/aimihat/Desktop/Side Projects/Omniscient/front-end/src/components/DailyView.js\";\nimport React from 'react';\nimport { Typography, Grid, Box, Paper } from '@material-ui/core';\nimport { ResponsiveLine } from '@nivo/line';\n\nfunction sumByDate(list) {\n  const map = new Map();\n  list.forEach(item => {\n    const key = item.date;\n    const collection = map.get(key);\n    map.set(key, item.amount + (collection ? collection : 0));\n  });\n  return map;\n} // make sure parent container have a defined height when using\n// responsive component, otherwise height will be 0 and\n// no chart will be rendered.\n// website examples showcase many properties,\n// you'll often use just a few of them.\n\n\nconst MyResponsiveBar = ({\n  data\n  /* see data tab */\n\n}) => /*#__PURE__*/React.createElement(Box, {\n  height: \"300px\",\n  width: \"100%\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(ResponsiveLine, {\n  data: [{\n    id: 0,\n    data: [{\n      x: \"2020-04-22\",\n      y: 0.1\n    }, {\n      x: \"2020-04-23\",\n      y: 0.5\n    }, {\n      x: \"2020-04-24\",\n      y: 0.6\n    }]\n  }],\n  margin: {\n    top: 50,\n    right: 60,\n    bottom: 100,\n    left: 60\n  },\n  xScale: {\n    \"type\": \"time\",\n    \"format\": \"%Y-%m-%d\"\n  },\n  yScale: {\n    type: 'linear',\n    min: 'auto',\n    max: 'auto',\n    stacked: true,\n    reverse: false\n  },\n  axisBottom: {\n    tickRotation: 60,\n    legend: 'date',\n    legendPosition: 'middle',\n    legendOffset: 80\n  },\n  axisLeft: {\n    legend: 'Daily Spend'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }\n}));\n\nexport default class DailyView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: Array.from(sumByDate(props.transactions)).map(day => {\n        return {\n          x: day[0],\n          y: day[1]\n        };\n      })\n    };\n  }\n\n  render() {\n    const {\n      data: chartData\n    } = this.state;\n\n    if (!chartData) {\n      return null;\n    }\n\n    console.log(chartData);\n    return /*#__PURE__*/React.createElement(MyResponsiveBar, {\n      data: chartData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/aimihat/Desktop/Side Projects/Omniscient/front-end/src/components/DailyView.js"],"names":["React","Typography","Grid","Box","Paper","ResponsiveLine","sumByDate","list","map","Map","forEach","item","key","date","collection","get","set","amount","MyResponsiveBar","data","id","x","y","top","right","bottom","left","type","min","max","stacked","reverse","tickRotation","legend","legendPosition","legendOffset","DailyView","PureComponent","constructor","props","state","Array","from","transactions","day","render","chartData","console","log"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Typography, Grid, Box, Paper} from '@material-ui/core';\nimport { ResponsiveLine } from '@nivo/line'\n\nfunction sumByDate(list) {\n  const map = new Map();\n  list.forEach((item) => {\n    const key = item.date;\n    const collection = map.get(key);\n    map.set(key, item.amount + (\n      collection\n      ? collection\n      : 0));\n  });\n  return map;\n}\n\n\n\n// make sure parent container have a defined height when using\n// responsive component, otherwise height will be 0 and\n// no chart will be rendered.\n// website examples showcase many properties,\n// you'll often use just a few of them.\nconst MyResponsiveBar = ({ data /* see data tab */ }) => (\n  <Box height=\"300px\" width=\"100%\">\n    <ResponsiveLine\n        data={\n          [{\n            id: 0,\n            data: [\n              { x: \"2020-04-22\", y: 0.1},\n              { x: \"2020-04-23\", y: 0.5},\n              { x: \"2020-04-24\", y: 0.6},\n            ]\n          }]\n        }\n        margin={{ top: 50, right: 60, bottom: 100, left: 60 }}\n        xScale={{\"type\": \"time\", \"format\": \"%Y-%m-%d\"}}\n        yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: true, reverse: false }}\n        axisBottom={{\n            tickRotation: 60,\n            legend: 'date',\n            legendPosition: 'middle',\n            legendOffset: 80,\n        }}\n        axisLeft={{\n            legend: 'Daily Spend',\n        }}\n    />\n  </Box>\n)\n\nexport default class DailyView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: Array.from(sumByDate(props.transactions)).map(day => {return ({x: day[0], y: day[1]})})\n    };\n  }\n\n  render() {\n    const {data: chartData} = this.state;\n\n    if (!chartData) {\n      return null;\n    }\n\n    console.log(chartData);\n\n    return (<MyResponsiveBar data={chartData} />);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}