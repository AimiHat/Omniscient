{"ast":null,"code":"var _jsxFileName = \"/Users/aimihat/Desktop/Side Projects/Omniscient/front-end/src/components/TransactionsList.js\";\nimport React from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableFooter, TablePagination, TableRow, IconButton } from '@material-ui/core';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { FirstPageIcon, KeyboardArrowLeft, KeyobardArrowRight, LastPageIcon } from '@material-ui/icons';\nimport PropTypes from 'prop-types';\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const {\n    count,\n    page,\n    rowsPerPage,\n    onChangePage\n  } = props;\n\n  const handleFirstPageButtonClick = event => {\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleFirstPageButtonClick,\n    disabled: page === 0,\n    \"aria-label\": \"first page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, theme.direction === 'rtl' ? /*#__PURE__*/React.createElement(LastPageIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(FirstPageIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    \"aria-label\": \"previous page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, theme.direction === 'rtl' ? /*#__PURE__*/React.createElement(KeyboardArrowRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(KeyboardArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleNextButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    \"aria-label\": \"next page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, theme.direction === 'rtl' ? /*#__PURE__*/React.createElement(KeyboardArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(KeyboardArrowRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleLastPageButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    \"aria-label\": \"last page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, theme.direction === 'rtl' ? /*#__PURE__*/React.createElement(FirstPageIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(LastPageIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  })));\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n};\n\nfunction TransactionsList() {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"custom pagination table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, (rowsPerPage > 0 ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage) : rows).map(row => /*#__PURE__*/React.createElement(TableRow, {\n    key: row.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, row.name), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, row.calories), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, row.fat))), emptyRows > 0 && /*#__PURE__*/React.createElement(TableRow, {\n    style: {\n      height: 53 * emptyRows\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(TableFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25, {\n      label: 'All',\n      value: -1\n    }],\n    colSpan: 3,\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    SelectProps: {\n      inputProps: {\n        'aria-label': 'rows per page'\n      },\n      native: true\n    },\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    ActionsComponent: TablePaginationActions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  })))));\n}\n\nexport default TransactionsList;","map":{"version":3,"sources":["/Users/aimihat/Desktop/Side Projects/Omniscient/front-end/src/components/TransactionsList.js"],"names":["React","Table","TableBody","TableCell","TableContainer","TableFooter","TablePagination","TableRow","IconButton","makeStyles","useTheme","FirstPageIcon","KeyboardArrowLeft","KeyobardArrowRight","LastPageIcon","PropTypes","TablePaginationActions","props","classes","useStyles1","theme","count","page","rowsPerPage","onChangePage","handleFirstPageButtonClick","event","handleBackButtonClick","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","root","direction","propTypes","number","isRequired","func","TransactionsList","setPage","useState","setRowsPerPage","emptyRows","min","rows","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","target","value","Paper","table","slice","map","row","name","calories","fat","height","label","inputProps","native"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableFooter,\n  TablePagination,\n  TableRow,\n  IconButton\n} from '@material-ui/core';\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\nimport {FirstPageIcon, KeyboardArrowLeft, KeyobardArrowRight, LastPageIcon} from '@material-ui/icons';\nimport PropTypes from 'prop-types';\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const {count, page, rowsPerPage, onChangePage} = props;\n\n  const handleFirstPageButtonClick = (event) => {\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = (event) => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = (event) => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = (event) => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return (<div className={classes.root}>\n    <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label=\"first page\">\n      {\n        theme.direction === 'rtl'\n          ? <LastPageIcon/>\n          : <FirstPageIcon/>\n      }\n    </IconButton>\n    <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n      {\n        theme.direction === 'rtl'\n          ? <KeyboardArrowRight/>\n          : <KeyboardArrowLeft/>\n      }\n    </IconButton>\n    <IconButton onClick={handleNextButtonClick} disabled={page >= Math.ceil(count / rowsPerPage) - 1} aria-label=\"next page\">\n      {\n        theme.direction === 'rtl'\n          ? <KeyboardArrowLeft/>\n          : <KeyboardArrowRight/>\n      }\n    </IconButton>\n    <IconButton onClick={handleLastPageButtonClick} disabled={page >= Math.ceil(count / rowsPerPage) - 1} aria-label=\"last page\">\n      {\n        theme.direction === 'rtl'\n          ? <FirstPageIcon/>\n          : <LastPageIcon/>\n      }\n    </IconButton>\n  </div>);\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n};\n\nfunction TransactionsList() {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (<TableContainer component={Paper}>\n    <Table className={classes.table} aria-label=\"custom pagination table\">\n      <TableBody>\n        {\n          (\n            rowsPerPage > 0\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            : rows).map((row) => (<TableRow key={row.name}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"right\">{row.calories}</TableCell>\n              <TableCell align=\"right\">{row.fat}</TableCell>\n            </TableRow>))\n        }\n\n        {\n          emptyRows > 0 && (<TableRow style={{\n              height: 53 * emptyRows\n            }}>\n            <TableCell colSpan={6}/>\n          </TableRow>)\n        }\n      </TableBody>\n      <TableFooter>\n        <TableRow>\n          <TablePagination rowsPerPageOptions={[\n              5,\n              10,\n              25, {\n                label: 'All',\n                value: -1\n              }\n            ]} colSpan={3} count={rows.length} rowsPerPage={rowsPerPage} page={page} SelectProps={{\n              inputProps: {\n                'aria-label': 'rows per page'\n              },\n              native: true\n            }} onChangePage={handleChangePage} onChangeRowsPerPage={handleChangeRowsPerPage} ActionsComponent={TablePaginationActions}/>\n        </TableRow>\n      </TableFooter>\n    </Table>\n  </TableContainer>);\n\n}\n\nexport default TransactionsList;\n"]},"metadata":{},"sourceType":"module"}