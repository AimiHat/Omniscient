{"ast":null,"code":"var _jsxFileName = \"/Users/aimihat/Desktop/Side Projects/Omniscient/front-end/src/components/Summary.js\";\nimport React from 'react';\nimport { Typography, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport Bank from './Bank';\nimport config from '../config';\nconst useStyles = makeStyles(theme => ({\n  bank_grid: {\n    marginTop: \"30px\",\n    marginBottom: \"30px\"\n  }\n}));\n\nfunction Summary({\n  accounts\n}) {\n  const classes = useStyles();\n  const [balances, setBalances] = React.useState(null);\n  React.useEffect(() => {\n    if (accounts.length === 0) {\n      return;\n    }\n\n    window.fetch(\"http://lvh.me:7000/accounts/balance/get\", {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json;charset=UTF-8'\n      },\n      body: JSON.stringify({\n        access_token: accounts[0][1]\n      })\n    }).then(r => r.json()).then(response => {\n      setBalances(response.map(acc => {\n        return {\n          name: acc.account_id,\n          balance: acc.balances.current,\n          image_url: \"\"\n        };\n      }));\n    });\n  }, [accounts]);\n\n  if (balances) {\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: \"container\",\n      justify: \"center\",\n      spacing: 2,\n      className: classes.bank_grid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, balances.map(balance => /*#__PURE__*/React.createElement(Grid, {\n      key: balance.name,\n      item: \"item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 36\n      }\n    }, /*#__PURE__*/React.createElement(Bank, Object.assign({}, balance, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    })))));\n  } else {\n    return /*#__PURE__*/React.createElement(Alert, {\n      severity: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AlertTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, \"You currently have no accounts.\"), \"Press the 'add' button to link your first current depository account.\");\n  }\n}\n\nexport default Summary;","map":{"version":3,"sources":["/Users/aimihat/Desktop/Side Projects/Omniscient/front-end/src/components/Summary.js"],"names":["React","Typography","Grid","makeStyles","Alert","AlertTitle","Bank","config","useStyles","theme","bank_grid","marginTop","marginBottom","Summary","accounts","classes","balances","setBalances","useState","useEffect","length","window","fetch","method","headers","body","JSON","stringify","access_token","then","r","json","response","map","acc","name","account_id","balance","current","image_url"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,EAAoBC,IAApB,QAA+B,mBAA/B;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,SAAQC,KAAR,EAAeC,UAAf,QAAgC,kBAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAAEM,KAAD,KAAY;AACvCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,SAAS,EAAE,MADF;AAETC,IAAAA,YAAY,EAAE;AAFL;AAD4B,CAAZ,CAAD,CAA5B;;AAOA,SAASC,OAAT,CAAiB;AAACC,EAAAA;AAAD,CAAjB,EAA6B;AAC3B,QAAMC,OAAO,GAAGP,SAAS,EAAzB;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BjB,KAAK,CAACkB,QAAN,CAAe,IAAf,CAAhC;AAEAlB,EAAAA,KAAK,CAACmB,SAAN,CAAgB,MAAM;AACpB,QAAIL,QAAQ,CAACM,MAAT,KAAoB,CAAxB,EAA2B;AACzB;AACD;;AACDC,IAAAA,MAAM,CAACC,KAAP,CAAa,yCAAb,EAAwD;AACtDC,MAAAA,MAAM,EAAE,MAD8C;AAEtDC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAF6C;AAKtDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACC,QAAAA,YAAY,EAAEd,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ;AAAf,OAAf;AALgD,KAAxD,EAMGe,IANH,CAMQC,CAAC,IAAIA,CAAC,CAACC,IAAF,EANb,EAMuBF,IANvB,CAM4BG,QAAQ,IAAI;AACtCf,MAAAA,WAAW,CAACe,QAAQ,CAACC,GAAT,CAAaC,GAAG,IAAI;AAAC,eAAO;AACtCC,UAAAA,IAAI,EAAGD,GAAG,CAACE,UAD2B;AAEtCC,UAAAA,OAAO,EAAEH,GAAG,CAAClB,QAAJ,CAAasB,OAFgB;AAGtCC,UAAAA,SAAS,EAAE;AAH2B,SAAP;AAI/B,OAJU,CAAD,CAAX;AAKD,KAZD;AAaD,GAjBD,EAiBG,CAACzB,QAAD,CAjBH;;AAmBA,MAAIE,QAAJ,EAAc;AACZ,wBAAQ,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,WAAhB;AAA4B,MAAA,OAAO,EAAC,QAApC;AAA6C,MAAA,OAAO,EAAE,CAAtD;AAAyD,MAAA,SAAS,EAAED,OAAO,CAACL,SAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEJM,QAAQ,CAACiB,GAAT,CAAcI,OAAD,iBAAc,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,OAAO,CAACF,IAAnB;AAAyB,MAAA,IAAI,EAAC,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACzB,oBAAC,IAAD,oBAAUE,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADyB,CAA3B,CAFI,CAAR;AAOD,GARD,MAQO;AACL,wBAAQ,oBAAC,KAAD;AAAO,MAAA,QAAQ,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACN,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADM,0EAAR;AAID;AACF;;AAED,eAAexB,OAAf","sourcesContent":["import React from 'react'\nimport {Typography, Grid} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Alert, AlertTitle} from '@material-ui/lab';\nimport Bank from './Bank';\nimport config from '../config';\n\nconst useStyles = makeStyles((theme) => ({\n  bank_grid: {\n    marginTop: \"30px\",\n    marginBottom: \"30px\"\n  }\n}))\n\nfunction Summary({accounts}) {\n  const classes = useStyles();\n  const [balances, setBalances] = React.useState(null);\n\n  React.useEffect(() => {\n    if (accounts.length === 0) {\n      return;\n    }\n    window.fetch(\"http://lvh.me:7000/accounts/balance/get\", {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json;charset=UTF-8'\n      },\n      body: JSON.stringify({access_token: accounts[0][1]})\n    }).then(r => r.json()).then(response => {\n      setBalances(response.map(acc => {return {\n        name : acc.account_id,\n        balance: acc.balances.current,\n        image_url: \"\"\n      }}))\n    })\n  }, [accounts])\n\n  if (balances) {\n    return (<Grid container=\"container\" justify=\"center\" spacing={2} className={classes.bank_grid}>\n      {\n        balances.map((balance) => (<Grid key={balance.name} item=\"item\">\n          <Bank {...balance}/>\n        </Grid>))\n      }\n    </Grid>);\n  } else {\n    return (<Alert severity=\"info\">\n      <AlertTitle>You currently have no accounts.</AlertTitle>\n      Press the 'add' button to link your first current depository account.\n    </Alert>)\n  }\n}\n\nexport default Summary;\n"]},"metadata":{},"sourceType":"module"}