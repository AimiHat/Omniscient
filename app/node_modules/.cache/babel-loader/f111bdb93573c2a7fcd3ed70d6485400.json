{"ast":null,"code":"var _jsxFileName = \"/Users/aimihat/Desktop/Side Projects/Omniscient/front-end/src/components/TransactionsList.js\";\nimport React from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableFooter, TablePagination, TableRow, IconButton } from '@material-ui/core';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { KeyboardArrowLeft, KeyboardArrowRight } from '@material-ui/icons';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport PropTypes from 'prop-types';\n\nfunction createData(name, calories, fat) {\n  return {\n    name,\n    calories,\n    fat\n  };\n}\n\nconst rows = [createData('Cupcake', 305, 3.7), createData('Donut', 452, 25.0), createData('Eclair', 262, 16.0), createData('Frozen yoghurt', 159, 6.0), createData('Gingerbread', 356, 16.0), createData('Honeycomb', 408, 3.2), createData('Ice cream sandwich', 237, 9.0), createData('Jelly Bean', 375, 0.0), createData('KitKat', 518, 26.0), createData('Lollipop', 392, 0.2), createData('Marshmallow', 318, 0), createData('Nougat', 360, 19.0), createData('Oreo', 437, 18.0)].sort((a, b) => a.calories < b.calories ? -1 : 1);\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const {\n    count,\n    page,\n    rowsPerPage,\n    onChangePage\n  } = props;\n\n  const handleFirstPageButtonClick = event => {\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleFirstPageButtonClick,\n    disabled: page === 0,\n    \"aria-label\": \"first page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, theme.direction === 'rtl' ? /*#__PURE__*/React.createElement(LastPageIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(FirstPageIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    \"aria-label\": \"previous page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, theme.direction === 'rtl' ? /*#__PURE__*/React.createElement(KeyboardArrowRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(KeyboardArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleNextButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    \"aria-label\": \"next page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, theme.direction === 'rtl' ? /*#__PURE__*/React.createElement(KeyboardArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(KeyboardArrowRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleLastPageButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    \"aria-label\": \"last page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, theme.direction === 'rtl' ? /*#__PURE__*/React.createElement(FirstPageIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(LastPageIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  })));\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n};\n\nfunction TransactionsList() {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"custom pagination table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, (rowsPerPage > 0 ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage) : rows).map(row => /*#__PURE__*/React.createElement(TableRow, {\n    key: row.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, row.name), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }, row.calories), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, row.fat))), emptyRows > 0 && /*#__PURE__*/React.createElement(TableRow, {\n    style: {\n      height: 53 * emptyRows\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(TableFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25, {\n      label: 'All',\n      value: -1\n    }],\n    colSpan: 3,\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    SelectProps: {\n      inputProps: {\n        'aria-label': 'rows per page'\n      },\n      native: true\n    },\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    ActionsComponent: TablePaginationActions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  })))));\n}\n\nexport default TransactionsList;","map":{"version":3,"sources":["/Users/aimihat/Desktop/Side Projects/Omniscient/front-end/src/components/TransactionsList.js"],"names":["React","Table","TableBody","TableCell","TableContainer","TableFooter","TablePagination","TableRow","IconButton","makeStyles","useTheme","KeyboardArrowLeft","KeyboardArrowRight","FirstPageIcon","LastPageIcon","PropTypes","createData","name","calories","fat","rows","sort","a","b","TablePaginationActions","props","classes","useStyles1","theme","count","page","rowsPerPage","onChangePage","handleFirstPageButtonClick","event","handleBackButtonClick","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","root","direction","propTypes","number","isRequired","func","TransactionsList","setPage","useState","setRowsPerPage","emptyRows","min","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","target","value","Paper","table","slice","map","row","height","label","inputProps","native"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableFooter,\n  TablePagination,\n  TableRow,\n  IconButton\n} from '@material-ui/core';\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\nimport {KeyboardArrowLeft, KeyboardArrowRight} from '@material-ui/icons';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport LastPageIcon from '@material-ui/icons/LastPage';\n\nimport PropTypes from 'prop-types';\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\nconst rows = [\n  createData('Cupcake', 305, 3.7),\n  createData('Donut', 452, 25.0),\n  createData('Eclair', 262, 16.0),\n  createData('Frozen yoghurt', 159, 6.0),\n  createData('Gingerbread', 356, 16.0),\n  createData('Honeycomb', 408, 3.2),\n  createData('Ice cream sandwich', 237, 9.0),\n  createData('Jelly Bean', 375, 0.0),\n  createData('KitKat', 518, 26.0),\n  createData('Lollipop', 392, 0.2),\n  createData('Marshmallow', 318, 0),\n  createData('Nougat', 360, 19.0),\n  createData('Oreo', 437, 18.0),\n].sort((a, b) => (a.calories < b.calories ? -1 : 1));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const {count, page, rowsPerPage, onChangePage} = props;\n\n  const handleFirstPageButtonClick = (event) => {\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = (event) => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = (event) => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = (event) => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return (<div className={classes.root}>\n    <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label=\"first page\">\n      {\n        theme.direction === 'rtl'\n          ? <LastPageIcon/>\n          : <FirstPageIcon/>\n      }\n    </IconButton>\n    <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n      {\n        theme.direction === 'rtl'\n          ? <KeyboardArrowRight/>\n          : <KeyboardArrowLeft/>\n      }\n    </IconButton>\n    <IconButton onClick={handleNextButtonClick} disabled={page >= Math.ceil(count / rowsPerPage) - 1} aria-label=\"next page\">\n      {\n        theme.direction === 'rtl'\n          ? <KeyboardArrowLeft/>\n          : <KeyboardArrowRight/>\n      }\n    </IconButton>\n    <IconButton onClick={handleLastPageButtonClick} disabled={page >= Math.ceil(count / rowsPerPage) - 1} aria-label=\"last page\">\n      {\n        theme.direction === 'rtl'\n          ? <FirstPageIcon/>\n          : <LastPageIcon/>\n      }\n    </IconButton>\n  </div>);\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n};\n\nfunction TransactionsList() {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (<TableContainer component={Paper}>\n    <Table className={classes.table} aria-label=\"custom pagination table\">\n      <TableBody>\n        {\n          (\n            rowsPerPage > 0\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            : rows).map((row) => (<TableRow key={row.name}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"right\">{row.calories}</TableCell>\n              <TableCell align=\"right\">{row.fat}</TableCell>\n            </TableRow>))\n        }\n\n        {\n          emptyRows > 0 && (<TableRow style={{\n              height: 53 * emptyRows\n            }}>\n            <TableCell colSpan={6}/>\n          </TableRow>)\n        }\n      </TableBody>\n      <TableFooter>\n        <TableRow>\n          <TablePagination rowsPerPageOptions={[\n              5,\n              10,\n              25, {\n                label: 'All',\n                value: -1\n              }\n            ]} colSpan={3} count={rows.length} rowsPerPage={rowsPerPage} page={page} SelectProps={{\n              inputProps: {\n                'aria-label': 'rows per page'\n              },\n              native: true\n            }} onChangePage={handleChangePage} onChangeRowsPerPage={handleChangeRowsPerPage} ActionsComponent={TablePaginationActions}/>\n        </TableRow>\n      </TableFooter>\n    </Table>\n  </TableContainer>);\n\n}\n\nexport default TransactionsList;\n"]},"metadata":{},"sourceType":"module"}