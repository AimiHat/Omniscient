{"ast":null,"code":"import _slicedToArray from\"/Users/aimihat/Desktop/Side Projects/Omniscient/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{Typography,Grid}from'@material-ui/core';import{makeStyles}from'@material-ui/core/styles';import{Alert,AlertTitle}from'@material-ui/lab';import Bank from'./Bank';import config from'../config';var useStyles=makeStyles(function(theme){return{bank_grid:{marginTop:\"30px\",marginBottom:\"30px\"}};});function Summary(_ref){var accounts=_ref.accounts;var classes=useStyles();var _React$useState=React.useState(null),_React$useState2=_slicedToArray(_React$useState,2),balances=_React$useState2[0],setBalances=_React$useState2[1];React.useEffect(function(){if(accounts.length===0){return;}window.fetch(\"http://lvh.me:7000/accounts/balance/get\",{method:'POST',headers:{'content-type':'application/json;charset=UTF-8'},body:JSON.stringify({access_token:accounts[0][1]})}).then(function(r){return r.json();}).then(function(response){setBalances(response.filter(function(acc){return acc.type===\"depository\";}).map(function(acc){return{name:acc.official_name,balance:acc.balances.current,image_url:\"\"};}));});},[accounts]);if(balances&&accounts.length>0){return/*#__PURE__*/React.createElement(Grid,{container:true,direction:\"row\",justify:\"center\",spacing:2,alignItems:\"center\",className:classes.bank_grid},balances.map(function(balance){return/*#__PURE__*/React.createElement(Grid,{key:balance.name,item:true,xs:3},/*#__PURE__*/React.createElement(Bank,balance));}));}else{return/*#__PURE__*/React.createElement(Alert,{severity:\"info\"},/*#__PURE__*/React.createElement(AlertTitle,null,\"You currently have no accounts.\"),\"Press the 'add' button to link your first current depository account.\");}}export default Summary;","map":{"version":3,"sources":["/Users/aimihat/Desktop/Side Projects/Omniscient/front-end/src/components/Summary.js"],"names":["React","Typography","Grid","makeStyles","Alert","AlertTitle","Bank","config","useStyles","theme","bank_grid","marginTop","marginBottom","Summary","accounts","classes","useState","balances","setBalances","useEffect","length","window","fetch","method","headers","body","JSON","stringify","access_token","then","r","json","response","filter","acc","type","map","name","official_name","balance","current","image_url"],"mappings":"gLAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,UAAR,CAAoBC,IAApB,KAA+B,mBAA/B,CACA,OAAQC,UAAR,KAAyB,0BAAzB,CACA,OAAQC,KAAR,CAAeC,UAAf,KAAgC,kBAAhC,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,MAAOC,CAAAA,MAAP,KAAmB,WAAnB,CAEA,GAAMC,CAAAA,SAAS,CAAGL,UAAU,CAAC,SAACM,KAAD,QAAY,CACvCC,SAAS,CAAE,CACTC,SAAS,CAAE,MADF,CAETC,YAAY,CAAE,MAFL,CAD4B,CAAZ,EAAD,CAA5B,CAOA,QAASC,CAAAA,OAAT,MAA6B,IAAXC,CAAAA,QAAW,MAAXA,QAAW,CAC3B,GAAMC,CAAAA,OAAO,CAAGP,SAAS,EAAzB,CAD2B,oBAEKR,KAAK,CAACgB,QAAN,CAAe,IAAf,CAFL,oDAEpBC,QAFoB,qBAEVC,WAFU,qBAI3BlB,KAAK,CAACmB,SAAN,CAAgB,UAAM,CACpB,GAAIL,QAAQ,CAACM,MAAT,GAAoB,CAAxB,CAA2B,CACzB,OACD,CACDC,MAAM,CAACC,KAAP,CAAa,yCAAb,CAAwD,CACtDC,MAAM,CAAE,MAD8C,CAEtDC,OAAO,CAAE,CACP,eAAgB,gCADT,CAF6C,CAKtDC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAACC,YAAY,CAAEd,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,CAAf,CAAf,CALgD,CAAxD,EAMGe,IANH,CAMQ,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,IAAF,EAAJ,EANT,EAMuBF,IANvB,CAM4B,SAAAG,QAAQ,CAAI,CACtCd,WAAW,CAACc,QAAQ,CAACC,MAAT,CAAgB,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,GAAa,YAAjB,EAAnB,EAAkDC,GAAlD,CAAsD,SAAAF,GAAG,CAAI,CAAC,MAAO,CAC/EG,IAAI,CAAGH,GAAG,CAACI,aADoE,CAE/EC,OAAO,CAAEL,GAAG,CAACjB,QAAJ,CAAauB,OAFyD,CAG/EC,SAAS,CAAE,EAHoE,CAAP,CAIxE,CAJU,CAAD,CAAX,CAKD,CAZD,EAaD,CAjBD,CAiBG,CAAC3B,QAAD,CAjBH,EAmBA,GAAIG,QAAQ,EAAKH,QAAQ,CAACM,MAAT,CAAkB,CAAnC,CAAuC,CACrC,mBAAQ,oBAAC,IAAD,EAAM,SAAS,KAAf,CACV,SAAS,CAAC,KADA,CAEV,OAAO,CAAC,QAFE,CAGX,OAAO,CAAE,CAHE,CAIV,UAAU,CAAC,QAJD,CAIU,SAAS,CAAEL,OAAO,CAACL,SAJ7B,EAMJO,QAAQ,CAACmB,GAAT,CAAa,SAACG,OAAD,qBAAc,oBAAC,IAAD,EAAM,GAAG,CAAEA,OAAO,CAACF,IAAnB,CAAyB,IAAI,KAA7B,CAA8B,EAAE,CAAE,CAAlC,eACzB,oBAAC,IAAD,CAAUE,OAAV,CADyB,CAAd,EAAb,CANI,CAAR,CAWD,CAZD,IAYO,CACL,mBAAQ,oBAAC,KAAD,EAAO,QAAQ,CAAC,MAAhB,eACN,oBAAC,UAAD,wCADM,yEAAR,CAID,CACF,CAED,cAAe1B,CAAAA,OAAf","sourcesContent":["import React from 'react'\nimport {Typography, Grid} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Alert, AlertTitle} from '@material-ui/lab';\nimport Bank from './Bank';\nimport config from '../config';\n\nconst useStyles = makeStyles((theme) => ({\n  bank_grid: {\n    marginTop: \"30px\",\n    marginBottom: \"30px\"\n  }\n}))\n\nfunction Summary({accounts}) {\n  const classes = useStyles();\n  const [balances, setBalances] = React.useState(null);\n\n  React.useEffect(() => {\n    if (accounts.length === 0) {\n      return;\n    }\n    window.fetch(\"http://lvh.me:7000/accounts/balance/get\", {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json;charset=UTF-8'\n      },\n      body: JSON.stringify({access_token: accounts[0][1]})\n    }).then(r => r.json()).then(response => {\n      setBalances(response.filter(acc => acc.type === \"depository\").map(acc => {return {\n        name : acc.official_name,\n        balance: acc.balances.current,\n        image_url: \"\"\n      }}))\n    })\n  }, [accounts])\n\n  if (balances && (accounts.length > 0)) {\n    return (<Grid container\n  direction=\"row\"\n  justify=\"center\"\n\tspacing={2}\n  alignItems=\"center\" className={classes.bank_grid}>\n      {\n        balances.map((balance) => (<Grid key={balance.name} item xs={3}>\n          <Bank {...balance}/>\n        </Grid>))\n      }\n    </Grid>);\n  } else {\n    return (<Alert severity=\"info\">\n      <AlertTitle>You currently have no accounts.</AlertTitle>\n      Press the 'add' button to link your first current depository account.\n    </Alert>)\n  }\n}\n\nexport default Summary;\n"]},"metadata":{},"sourceType":"module"}