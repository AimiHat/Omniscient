{"ast":null,"code":"var _jsxFileName = \"/Users/aimihat/Desktop/Side Projects/Omniscient/front-end/src/components/DailyView.js\";\nimport React from 'react';\nimport { Typography, Grid, Box, Paper } from '@material-ui/core';\nimport { ResponsiveBar } from '@nivo/bar';\n\nfunction sumByDate(list) {\n  const map = new Map();\n  list.forEach(item => {\n    const key = item.date;\n    const collection = map.get(key);\n    map.set(key, item.amount + (collection ? collection : 0));\n  });\n  return map;\n} // make sure parent container have a defined height when using\n// responsive component, otherwise height will be 0 and\n// no chart will be rendered.\n// website examples showcase many properties,\n// you'll often use just a few of them.\n\n\nconst MyResponsiveBar = ({\n  data\n  /* see data tab */\n\n}) => /*#__PURE__*/React.createElement(Box, {\n  height: \"300px\",\n  width: \"100%\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(ResponsiveBar, {\n  data: data,\n  keys: ['spend'],\n  indexBy: \"date\",\n  margin: {\n    top: 50,\n    right: 60,\n    bottom: 100,\n    left: 60\n  },\n  padding: 0.3,\n  colors: {\n    scheme: 'nivo'\n  },\n  defs: [{\n    id: 'dots',\n    type: 'patternDots',\n    background: 'inherit',\n    color: '#38bcb2',\n    size: 4,\n    padding: 1,\n    stagger: true\n  }, {\n    id: 'lines',\n    type: 'patternLines',\n    background: 'inherit',\n    color: '#eed312',\n    rotation: -45,\n    lineWidth: 6,\n    spacing: 10\n  }],\n  borderColor: {\n    from: 'color',\n    modifiers: [['darker', 1.6]]\n  },\n  axisTop: null,\n  axisRight: null,\n  xScale: {\n    \"type\": \"time\",\n    \"format\": \"native\",\n    \"precision\": \"day\"\n  },\n  axisBottom: {\n    tickSize: 2,\n    tickPadding: 5,\n    tickRotation: 60,\n    legend: 'date',\n    legendPosition: 'middle',\n    legendOffset: 80,\n    format: '%b %d'\n  },\n  axisLeft: {\n    tickSize: 5,\n    tickPadding: 5,\n    tickRotation: 0,\n    legend: 'Daily Spend',\n    legendPosition: 'middle',\n    legendOffset: -50\n  },\n  labelSkipWidth: 12,\n  labelSkipHeight: 12,\n  labelTextColor: {\n    from: 'color',\n    modifiers: [['darker', 1.6]]\n  },\n  animate: true,\n  motionStiffness: 90,\n  motionDamping: 15,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }\n}));\n\nexport default class DailyView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: Array.from(sumByDate(props.transactions)).map(day => {\n        return {\n          date: Date.parse(day[0]),\n          spend: day[1]\n        };\n      })\n    };\n  }\n\n  render() {\n    const {\n      data: chartData\n    } = this.state;\n\n    if (!chartData) {\n      return null;\n    }\n\n    console.log(chartData);\n    return /*#__PURE__*/React.createElement(MyResponsiveBar, {\n      data: chartData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/aimihat/Desktop/Side Projects/Omniscient/front-end/src/components/DailyView.js"],"names":["React","Typography","Grid","Box","Paper","ResponsiveBar","sumByDate","list","map","Map","forEach","item","key","date","collection","get","set","amount","MyResponsiveBar","data","top","right","bottom","left","scheme","id","type","background","color","size","padding","stagger","rotation","lineWidth","spacing","from","modifiers","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","format","DailyView","PureComponent","constructor","props","state","Array","transactions","day","Date","parse","spend","render","chartData","console","log"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Typography, Grid, Box, Paper} from '@material-ui/core';\nimport { ResponsiveBar } from '@nivo/bar'\n\nfunction sumByDate(list) {\n  const map = new Map();\n  list.forEach((item) => {\n    const key = item.date;\n    const collection = map.get(key);\n    map.set(key, item.amount + (\n      collection\n      ? collection\n      : 0));\n  });\n  return map;\n}\n\n\n\n// make sure parent container have a defined height when using\n// responsive component, otherwise height will be 0 and\n// no chart will be rendered.\n// website examples showcase many properties,\n// you'll often use just a few of them.\nconst MyResponsiveBar = ({ data /* see data tab */ }) => (\n  <Box height=\"300px\" width=\"100%\">\n    <ResponsiveBar\n        data={data}\n        keys={[ 'spend' ]}\n        indexBy=\"date\"\n        margin={{ top: 50, right: 60, bottom: 100, left: 60 }}\n        padding={0.3}\n        colors={{ scheme: 'nivo' }}\n        defs={[\n            {\n                id: 'dots',\n                type: 'patternDots',\n                background: 'inherit',\n                color: '#38bcb2',\n                size: 4,\n                padding: 1,\n                stagger: true\n            },\n            {\n                id: 'lines',\n                type: 'patternLines',\n                background: 'inherit',\n                color: '#eed312',\n                rotation: -45,\n                lineWidth: 6,\n                spacing: 10\n            }\n        ]}\n        borderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n        axisTop={null}\n        axisRight={null}\n        xScale={{ \"type\": \"time\", \"format\": \"native\", \"precision\": \"day\" }}\n        axisBottom={{\n            tickSize: 2,\n            tickPadding: 5,\n            tickRotation: 60,\n            legend: 'date',\n            legendPosition: 'middle',\n            legendOffset: 80,\n            format: '%b %d'\n        }}\n        axisLeft={{\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'Daily Spend',\n            legendPosition: 'middle',\n            legendOffset: -50\n        }}\n        labelSkipWidth={12}\n        labelSkipHeight={12}\n        labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n        animate={true}\n        motionStiffness={90}\n        motionDamping={15}\n    />\n  </Box>\n)\n\nexport default class DailyView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: Array.from(sumByDate(props.transactions)).map(day => {return ({date: Date.parse(day[0]), spend: day[1]})})\n    };\n  }\n\n  render() {\n    const {data: chartData} = this.state;\n\n    if (!chartData) {\n      return null;\n    }\n\n    console.log(chartData);\n\n    return (<MyResponsiveBar data={chartData} />);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}