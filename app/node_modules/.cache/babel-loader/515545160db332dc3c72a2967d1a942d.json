{"ast":null,"code":"var _jsxFileName = \"/Users/aimihat/Desktop/Side Projects/Omniscient/front-end/src/components/TransactionsList.js\";\nimport React from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableFooter, TablePagination, TableRow, TableHead, IconButton, Paper } from '@material-ui/core';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { KeyboardArrowLeft, KeyboardArrowRight } from '@material-ui/icons';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport PropTypes from 'prop-types';\n\nfunction TransactionsList({\n  transactions\n}) {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, transactions.length - page * rowsPerPage);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    \"aria-label\": \"custom pagination table\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \"Store\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, \"Amount\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"Date\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, (rowsPerPage > 0 ? transactions.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage) : transactions).map(row => /*#__PURE__*/React.createElement(TableRow, {\n    key: row.store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 43\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, row.name), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, row.amount), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, row.category), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, row.date))), emptyRows > 0 && /*#__PURE__*/React.createElement(TableRow, {\n    style: {\n      height: 53 * emptyRows\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(TableFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25, {\n      label: 'All',\n      value: -1\n    }],\n    colSpan: 3,\n    count: transactions.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  })))));\n}\n\nexport default TransactionsList;","map":{"version":3,"sources":["/Users/aimihat/Desktop/Side Projects/Omniscient/front-end/src/components/TransactionsList.js"],"names":["React","Table","TableBody","TableCell","TableContainer","TableFooter","TablePagination","TableRow","TableHead","IconButton","Paper","makeStyles","useTheme","KeyboardArrowLeft","KeyboardArrowRight","FirstPageIcon","LastPageIcon","PropTypes","TransactionsList","transactions","page","setPage","useState","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","slice","map","row","store","name","amount","category","date","height","label"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableFooter,\n  TablePagination,\n  TableRow,\n  TableHead,\n  IconButton,\n  Paper\n} from '@material-ui/core';\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\nimport {KeyboardArrowLeft, KeyboardArrowRight} from '@material-ui/icons';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport LastPageIcon from '@material-ui/icons/LastPage';\n\nimport PropTypes from 'prop-types';\n\nfunction TransactionsList({transactions}) {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, transactions.length - page * rowsPerPage);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (<TableContainer component={Paper}>\n    <Table aria-label=\"custom pagination table\" size=\"small\">\n      <TableHead>\n        <TableRow>\n          <TableCell>Store</TableCell>\n          <TableCell align=\"right\">Amount</TableCell>\n          <TableCell align=\"right\">Category</TableCell>\n          <TableCell align=\"right\">Date</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {\n          (\n            rowsPerPage > 0\n            ? transactions.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            : transactions).map((row) => (<TableRow key={row.store}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"right\">{row.amount}</TableCell>\n              <TableCell align=\"right\">{row.category}</TableCell>\n              <TableCell align=\"right\">{row.date}</TableCell>\n            </TableRow>))\n        }\n\n        {\n          emptyRows > 0 && (<TableRow style={{\n              height: 53 * emptyRows\n            }}>\n            <TableCell colSpan={6}/>\n          </TableRow>)\n        }\n      </TableBody>\n      <TableFooter>\n        <TableRow>\n          <TablePagination rowsPerPageOptions={[\n              5,\n              10,\n              25, {\n                label: 'All',\n                value: -1\n              }\n            ]} colSpan={3} count={transactions.length} rowsPerPage={rowsPerPage} page={page} onChangePage={handleChangePage} onChangeRowsPerPage={handleChangeRowsPerPage}/>\n        </TableRow>\n      </TableFooter>\n    </Table>\n  </TableContainer>);\n}\n\nexport default TransactionsList;\n"]},"metadata":{},"sourceType":"module"}